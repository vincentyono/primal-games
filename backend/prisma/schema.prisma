// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model game {
  id             String      @id @default(uuid())
  title          String      @db.VarChar(100)
  description    String      @db.Text
  developer      String      @db.VarChar(40)
  publisher      String      @db.VarChar(40)
  images         Json
  price          Decimal
  average_rating Float       @default(0)
  genres         genre[]
  ratings        ratings[]
  platforms      platforms[]

  // this is to satisfy prisma
  user         user[]
  bundle_item  bundle_item[]
  transactions transactions[]
  on_sale      on_sale[]
}

model genre {
  id    String @id @default(uuid())
  name  String @db.VarChar(20)
  games game[]
}

model ratings {
  id      String   @id @default(uuid())
  game    game     @relation(fields: [game_id], references: [id])
  game_id String
  user    user     @relation(fields: [user_id], references: [id])
  user_id String
  rating  Int      @db.UnsignedTinyInt()
  date    DateTime @default(now())
  comment String?  @db.Text
}

model platforms {
  id       String @id @default(uuid())
  platform String @db.VarChar(30)

  game game[]
}

model user {
  id               String           @id @default(uuid())
  username         String           @unique @db.VarChar(24)
  email            String           @unique @db.VarChar(50)
  password         String           @db.VarChar(120)
  ratings          ratings[]
  cart             game[]
  friends          user[]           @relation("UserFriends")
  symmetricfriends user[]           @relation("UserFriends") // This exists to satisfy prisma (FriendList)
  transactions     transactions[]
  payment_method   payment_method[]
}

model bundles {
  id          String        @id @default(uuid())
  name        String        @db.VarChar(70)
  price       Decimal
  bundle_item bundle_item[]
}

model bundle_item {
  id        String  @id @default(uuid())
  game      game    @relation(fields: [game_id], references: [id])
  game_id   String
  bundle    bundles @relation(fields: [bundle_id], references: [id])
  bundle_id String
}

model on_sale {
  id       String @id @default(uuid())
  game     game   @relation(fields: [game_id], references: [id])
  game_id  String
  discount Int    @db.UnsignedTinyInt()
}

model transactions {
  id                String         @id @default(uuid())
  game              game           @relation(fields: [game_id], references: [id])
  game_id           String
  user              user           @relation(fields: [user_id], references: [id])
  user_id           String
  invoice_id        String
  payment_method    payment_method @relation(fields: [payment_method_id], references: [id])
  payment_method_id String
}

model payment_method {
  id              String   @id @default(uuid())
  description     String   @db.VarChar(20)
  card_number     String?  @db.VarChar(17)
  expiration_date DateTime
  user            user     @relation(fields: [userId], references: [id])
  userId          String

  transactions transactions[] // This exist to satisfy prisma
}
